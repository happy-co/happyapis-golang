// Code generated by protoc-gen-go.
// source: happyco/manage/asset/v1/asset.proto
// DO NOT EDIT!

/*
Package v1 is a generated protocol buffer package.

It is generated from these files:
	happyco/manage/asset/v1/asset.proto

It has these top-level messages:
	Asset
	Unit
	Property
	ListAssetsRequest
	ListAssetsResponse
	CreateAssetsRequest
	CreateAssetsResponse
	UpdateAssetsRequest
	UpdateAssetsResponse
	SetAssetsArchivedRequest
	SetAssetsArchivedResponse
*/
package v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import happyco_type_v1 "github.com/happy-co/happyapis-golang/happyco/type/v1"
import happyco_type_v11 "github.com/happy-co/happyapis-golang/happyco/type/v1"
import _ "google.golang.org/genproto/googleapis/api/annotations"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Asset struct {
	Id            *happyco_type_v1.IntegrationID `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Archived      bool                           `protobuf:"varint,2,opt,name=archived" json:"archived,omitempty"`
	AddressLine_1 string                         `protobuf:"bytes,3,opt,name=address_line_1,json=addressLine1" json:"address_line_1,omitempty"`
	AddressLine_2 string                         `protobuf:"bytes,4,opt,name=address_line_2,json=addressLine2" json:"address_line_2,omitempty"`
	City          string                         `protobuf:"bytes,5,opt,name=city" json:"city,omitempty"`
	State         string                         `protobuf:"bytes,6,opt,name=state" json:"state,omitempty"`
	PostalCode    string                         `protobuf:"bytes,7,opt,name=postal_code,json=postalCode" json:"postal_code,omitempty"`
	Country       string                         `protobuf:"bytes,8,opt,name=country" json:"country,omitempty"`
	// Types that are valid to be assigned to Type:
	//	*Asset_Unit
	//	*Asset_Property
	Type isAsset_Type `protobuf_oneof:"type"`
}

func (m *Asset) Reset()                    { *m = Asset{} }
func (m *Asset) String() string            { return proto.CompactTextString(m) }
func (*Asset) ProtoMessage()               {}
func (*Asset) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isAsset_Type interface {
	isAsset_Type()
}

type Asset_Unit struct {
	Unit *Unit `protobuf:"bytes,9,opt,name=unit,oneof"`
}
type Asset_Property struct {
	Property *Property `protobuf:"bytes,10,opt,name=property,oneof"`
}

func (*Asset_Unit) isAsset_Type()     {}
func (*Asset_Property) isAsset_Type() {}

func (m *Asset) GetType() isAsset_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Asset) GetId() *happyco_type_v1.IntegrationID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Asset) GetArchived() bool {
	if m != nil {
		return m.Archived
	}
	return false
}

func (m *Asset) GetAddressLine_1() string {
	if m != nil {
		return m.AddressLine_1
	}
	return ""
}

func (m *Asset) GetAddressLine_2() string {
	if m != nil {
		return m.AddressLine_2
	}
	return ""
}

func (m *Asset) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Asset) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Asset) GetPostalCode() string {
	if m != nil {
		return m.PostalCode
	}
	return ""
}

func (m *Asset) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Asset) GetUnit() *Unit {
	if x, ok := m.GetType().(*Asset_Unit); ok {
		return x.Unit
	}
	return nil
}

func (m *Asset) GetProperty() *Property {
	if x, ok := m.GetType().(*Asset_Property); ok {
		return x.Property
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Asset) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Asset_OneofMarshaler, _Asset_OneofUnmarshaler, _Asset_OneofSizer, []interface{}{
		(*Asset_Unit)(nil),
		(*Asset_Property)(nil),
	}
}

func _Asset_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Asset)
	// type
	switch x := m.Type.(type) {
	case *Asset_Unit:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Unit); err != nil {
			return err
		}
	case *Asset_Property:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Property); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Asset.Type has unexpected type %T", x)
	}
	return nil
}

func _Asset_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Asset)
	switch tag {
	case 9: // type.unit
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Unit)
		err := b.DecodeMessage(msg)
		m.Type = &Asset_Unit{msg}
		return true, err
	case 10: // type.property
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Property)
		err := b.DecodeMessage(msg)
		m.Type = &Asset_Property{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Asset_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Asset)
	// type
	switch x := m.Type.(type) {
	case *Asset_Unit:
		s := proto.Size(x.Unit)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Asset_Property:
		s := proto.Size(x.Property)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Unit struct {
	Building  string `protobuf:"bytes,1,opt,name=building" json:"building,omitempty"`
	FloorPlan string `protobuf:"bytes,2,opt,name=floor_plan,json=floorPlan" json:"floor_plan,omitempty"`
}

func (m *Unit) Reset()                    { *m = Unit{} }
func (m *Unit) String() string            { return proto.CompactTextString(m) }
func (*Unit) ProtoMessage()               {}
func (*Unit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Unit) GetBuilding() string {
	if m != nil {
		return m.Building
	}
	return ""
}

func (m *Unit) GetFloorPlan() string {
	if m != nil {
		return m.FloorPlan
	}
	return ""
}

type Property struct {
	KeyNumber string `protobuf:"bytes,1,opt,name=key_number,json=keyNumber" json:"key_number,omitempty"`
}

func (m *Property) Reset()                    { *m = Property{} }
func (m *Property) String() string            { return proto.CompactTextString(m) }
func (*Property) ProtoMessage()               {}
func (*Property) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Property) GetKeyNumber() string {
	if m != nil {
		return m.KeyNumber
	}
	return ""
}

type ListAssetsRequest struct {
	AccountId       *happyco_type_v1.IntegrationID   `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	FolderId        *happyco_type_v1.IntegrationID   `protobuf:"bytes,2,opt,name=folder_id,json=folderId" json:"folder_id,omitempty"`
	AssetIds        []*happyco_type_v1.IntegrationID `protobuf:"bytes,3,rep,name=asset_ids,json=assetIds" json:"asset_ids,omitempty"`
	IncludeArchived bool                             `protobuf:"varint,4,opt,name=include_archived,json=includeArchived" json:"include_archived,omitempty"`
	Paging          *happyco_type_v11.Paging         `protobuf:"bytes,5,opt,name=paging" json:"paging,omitempty"`
}

func (m *ListAssetsRequest) Reset()                    { *m = ListAssetsRequest{} }
func (m *ListAssetsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListAssetsRequest) ProtoMessage()               {}
func (*ListAssetsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ListAssetsRequest) GetAccountId() *happyco_type_v1.IntegrationID {
	if m != nil {
		return m.AccountId
	}
	return nil
}

func (m *ListAssetsRequest) GetFolderId() *happyco_type_v1.IntegrationID {
	if m != nil {
		return m.FolderId
	}
	return nil
}

func (m *ListAssetsRequest) GetAssetIds() []*happyco_type_v1.IntegrationID {
	if m != nil {
		return m.AssetIds
	}
	return nil
}

func (m *ListAssetsRequest) GetIncludeArchived() bool {
	if m != nil {
		return m.IncludeArchived
	}
	return false
}

func (m *ListAssetsRequest) GetPaging() *happyco_type_v11.Paging {
	if m != nil {
		return m.Paging
	}
	return nil
}

type ListAssetsResponse struct {
	Assets []*Asset                         `protobuf:"bytes,1,rep,name=assets" json:"assets,omitempty"`
	Paging *happyco_type_v11.PagingResponse `protobuf:"bytes,2,opt,name=paging" json:"paging,omitempty"`
}

func (m *ListAssetsResponse) Reset()                    { *m = ListAssetsResponse{} }
func (m *ListAssetsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListAssetsResponse) ProtoMessage()               {}
func (*ListAssetsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ListAssetsResponse) GetAssets() []*Asset {
	if m != nil {
		return m.Assets
	}
	return nil
}

func (m *ListAssetsResponse) GetPaging() *happyco_type_v11.PagingResponse {
	if m != nil {
		return m.Paging
	}
	return nil
}

type CreateAssetsRequest struct {
	AccountId *happyco_type_v1.IntegrationID `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	FolderId  *happyco_type_v1.IntegrationID `protobuf:"bytes,2,opt,name=folder_id,json=folderId" json:"folder_id,omitempty"`
	Assets    []*Asset                       `protobuf:"bytes,3,rep,name=assets" json:"assets,omitempty"`
}

func (m *CreateAssetsRequest) Reset()                    { *m = CreateAssetsRequest{} }
func (m *CreateAssetsRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateAssetsRequest) ProtoMessage()               {}
func (*CreateAssetsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *CreateAssetsRequest) GetAccountId() *happyco_type_v1.IntegrationID {
	if m != nil {
		return m.AccountId
	}
	return nil
}

func (m *CreateAssetsRequest) GetFolderId() *happyco_type_v1.IntegrationID {
	if m != nil {
		return m.FolderId
	}
	return nil
}

func (m *CreateAssetsRequest) GetAssets() []*Asset {
	if m != nil {
		return m.Assets
	}
	return nil
}

type CreateAssetsResponse struct {
	AssetIds []*happyco_type_v1.IntegrationID `protobuf:"bytes,1,rep,name=asset_ids,json=assetIds" json:"asset_ids,omitempty"`
}

func (m *CreateAssetsResponse) Reset()                    { *m = CreateAssetsResponse{} }
func (m *CreateAssetsResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateAssetsResponse) ProtoMessage()               {}
func (*CreateAssetsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *CreateAssetsResponse) GetAssetIds() []*happyco_type_v1.IntegrationID {
	if m != nil {
		return m.AssetIds
	}
	return nil
}

type UpdateAssetsRequest struct {
	AccountId *happyco_type_v1.IntegrationID `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	FolderId  *happyco_type_v1.IntegrationID `protobuf:"bytes,2,opt,name=folder_id,json=folderId" json:"folder_id,omitempty"`
	Assets    []*Asset                       `protobuf:"bytes,3,rep,name=assets" json:"assets,omitempty"`
}

func (m *UpdateAssetsRequest) Reset()                    { *m = UpdateAssetsRequest{} }
func (m *UpdateAssetsRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateAssetsRequest) ProtoMessage()               {}
func (*UpdateAssetsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *UpdateAssetsRequest) GetAccountId() *happyco_type_v1.IntegrationID {
	if m != nil {
		return m.AccountId
	}
	return nil
}

func (m *UpdateAssetsRequest) GetFolderId() *happyco_type_v1.IntegrationID {
	if m != nil {
		return m.FolderId
	}
	return nil
}

func (m *UpdateAssetsRequest) GetAssets() []*Asset {
	if m != nil {
		return m.Assets
	}
	return nil
}

type UpdateAssetsResponse struct {
}

func (m *UpdateAssetsResponse) Reset()                    { *m = UpdateAssetsResponse{} }
func (m *UpdateAssetsResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateAssetsResponse) ProtoMessage()               {}
func (*UpdateAssetsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type SetAssetsArchivedRequest struct {
	AccountId *happyco_type_v1.IntegrationID   `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	FolderId  *happyco_type_v1.IntegrationID   `protobuf:"bytes,2,opt,name=folder_id,json=folderId" json:"folder_id,omitempty"`
	AssetIds  []*happyco_type_v1.IntegrationID `protobuf:"bytes,3,rep,name=asset_ids,json=assetIds" json:"asset_ids,omitempty"`
}

func (m *SetAssetsArchivedRequest) Reset()                    { *m = SetAssetsArchivedRequest{} }
func (m *SetAssetsArchivedRequest) String() string            { return proto.CompactTextString(m) }
func (*SetAssetsArchivedRequest) ProtoMessage()               {}
func (*SetAssetsArchivedRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *SetAssetsArchivedRequest) GetAccountId() *happyco_type_v1.IntegrationID {
	if m != nil {
		return m.AccountId
	}
	return nil
}

func (m *SetAssetsArchivedRequest) GetFolderId() *happyco_type_v1.IntegrationID {
	if m != nil {
		return m.FolderId
	}
	return nil
}

func (m *SetAssetsArchivedRequest) GetAssetIds() []*happyco_type_v1.IntegrationID {
	if m != nil {
		return m.AssetIds
	}
	return nil
}

type SetAssetsArchivedResponse struct {
}

func (m *SetAssetsArchivedResponse) Reset()                    { *m = SetAssetsArchivedResponse{} }
func (m *SetAssetsArchivedResponse) String() string            { return proto.CompactTextString(m) }
func (*SetAssetsArchivedResponse) ProtoMessage()               {}
func (*SetAssetsArchivedResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func init() {
	proto.RegisterType((*Asset)(nil), "happyco.manage.asset.v1.Asset")
	proto.RegisterType((*Unit)(nil), "happyco.manage.asset.v1.Unit")
	proto.RegisterType((*Property)(nil), "happyco.manage.asset.v1.Property")
	proto.RegisterType((*ListAssetsRequest)(nil), "happyco.manage.asset.v1.ListAssetsRequest")
	proto.RegisterType((*ListAssetsResponse)(nil), "happyco.manage.asset.v1.ListAssetsResponse")
	proto.RegisterType((*CreateAssetsRequest)(nil), "happyco.manage.asset.v1.CreateAssetsRequest")
	proto.RegisterType((*CreateAssetsResponse)(nil), "happyco.manage.asset.v1.CreateAssetsResponse")
	proto.RegisterType((*UpdateAssetsRequest)(nil), "happyco.manage.asset.v1.UpdateAssetsRequest")
	proto.RegisterType((*UpdateAssetsResponse)(nil), "happyco.manage.asset.v1.UpdateAssetsResponse")
	proto.RegisterType((*SetAssetsArchivedRequest)(nil), "happyco.manage.asset.v1.SetAssetsArchivedRequest")
	proto.RegisterType((*SetAssetsArchivedResponse)(nil), "happyco.manage.asset.v1.SetAssetsArchivedResponse")
}

func init() { proto.RegisterFile("happyco/manage/asset/v1/asset.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 799 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xdc, 0x56, 0xcf, 0x4f, 0xe3, 0x46,
	0x18, 0xc5, 0x49, 0x08, 0xf1, 0x07, 0x2d, 0xed, 0x14, 0x15, 0xe3, 0x42, 0x13, 0x5c, 0xaa, 0x06,
	0xda, 0x3a, 0x4a, 0x90, 0x5a, 0xa9, 0x55, 0x55, 0x01, 0x3d, 0x10, 0x09, 0x55, 0xc8, 0x88, 0x4b,
	0x2f, 0xd6, 0x60, 0x0f, 0x61, 0x84, 0x99, 0x71, 0x3d, 0x93, 0x48, 0xb9, 0x22, 0xf5, 0xd6, 0xdb,
	0xee, 0xde, 0xf7, 0xb0, 0x87, 0xfd, 0x57, 0xf6, 0xcc, 0xbf, 0xb0, 0x7f, 0xc8, 0xca, 0xe3, 0x71,
	0x42, 0x48, 0x8c, 0xc2, 0x69, 0x7f, 0xdc, 0x32, 0xf3, 0xbd, 0xe7, 0xef, 0xcd, 0xfb, 0xde, 0xc4,
	0x86, 0xef, 0xae, 0x70, 0x1c, 0x0f, 0x03, 0xde, 0xba, 0xc1, 0x0c, 0xf7, 0x48, 0x0b, 0x0b, 0x41,
	0x64, 0x6b, 0xd0, 0xce, 0x7e, 0xb8, 0x71, 0xc2, 0x25, 0x47, 0xeb, 0x1a, 0xe4, 0x66, 0x20, 0x37,
	0xab, 0x0d, 0xda, 0xf6, 0x4e, 0xce, 0x96, 0xc3, 0x98, 0xa4, 0x2c, 0xca, 0x24, 0xe9, 0x25, 0x58,
	0x52, 0xce, 0x7c, 0x1a, 0x66, 0x74, 0x7b, 0xf3, 0x21, 0x2a, 0xc6, 0x3d, 0xca, 0x7a, 0x79, 0xb5,
	0xc7, 0x79, 0x2f, 0x22, 0x2d, 0x1c, 0xd3, 0x16, 0x66, 0x8c, 0x4b, 0xc5, 0x16, 0x59, 0xd5, 0xb9,
	0x2d, 0xc3, 0xe2, 0x41, 0xda, 0x0e, 0xb9, 0x50, 0xa2, 0xa1, 0x65, 0x34, 0x8c, 0xe6, 0x72, 0xe7,
	0x5b, 0x37, 0x57, 0x94, 0x3e, 0xd2, 0x1d, 0xb4, 0xdd, 0xee, 0xb8, 0x71, 0xf7, 0x2f, 0xaf, 0x44,
	0x43, 0x64, 0x43, 0x0d, 0x27, 0xc1, 0x15, 0x1d, 0x90, 0xd0, 0x2a, 0x35, 0x8c, 0x66, 0xcd, 0x1b,
	0xad, 0xd1, 0x0e, 0x7c, 0x8e, 0xc3, 0x30, 0x21, 0x42, 0xf8, 0x11, 0x65, 0xc4, 0x6f, 0x5b, 0xe5,
	0x86, 0xd1, 0x34, 0xbd, 0x15, 0xbd, 0x7b, 0x42, 0x19, 0x69, 0x4f, 0xa1, 0x3a, 0x56, 0x65, 0x0a,
	0xd5, 0x41, 0x08, 0x2a, 0x01, 0x95, 0x43, 0x6b, 0x51, 0xd5, 0xd4, 0x6f, 0xb4, 0x06, 0x8b, 0x42,
	0x62, 0x49, 0xac, 0xaa, 0xda, 0xcc, 0x16, 0xa8, 0x0e, 0xcb, 0x31, 0x17, 0x12, 0x47, 0x7e, 0xc0,
	0x43, 0x62, 0x2d, 0xa9, 0x1a, 0x64, 0x5b, 0x47, 0x3c, 0x24, 0xc8, 0x82, 0xa5, 0x80, 0xf7, 0x99,
	0x4c, 0x86, 0x56, 0x4d, 0x15, 0xf3, 0x25, 0xda, 0x87, 0x4a, 0x9f, 0x51, 0x69, 0x99, 0xea, 0xf8,
	0x5b, 0x6e, 0xc1, 0x40, 0xdc, 0x73, 0x46, 0xe5, 0xf1, 0x82, 0xa7, 0xc0, 0xe8, 0x4f, 0xa8, 0xc5,
	0x09, 0x8f, 0x49, 0x22, 0x87, 0x16, 0x28, 0xe2, 0x76, 0x21, 0xf1, 0x54, 0x03, 0x8f, 0x17, 0xbc,
	0x11, 0xe9, 0xb0, 0x0a, 0x95, 0xd4, 0x5f, 0xe7, 0x00, 0x2a, 0xe9, 0x83, 0x53, 0x4b, 0x2f, 0xfa,
	0x34, 0x0a, 0x29, 0xeb, 0xa9, 0x41, 0x98, 0xde, 0x68, 0x8d, 0xb6, 0x00, 0x2e, 0x23, 0xce, 0x13,
	0x3f, 0x8e, 0x30, 0x53, 0x86, 0x9b, 0x9e, 0xa9, 0x76, 0x4e, 0x23, 0xcc, 0x9c, 0x5d, 0xa8, 0xe5,
	0x2d, 0x52, 0xe8, 0x35, 0x19, 0xfa, 0xac, 0x7f, 0x73, 0x41, 0x12, 0xfd, 0x20, 0xf3, 0x9a, 0x0c,
	0xff, 0x56, 0x1b, 0xce, 0xeb, 0x12, 0x7c, 0x79, 0x42, 0x85, 0x54, 0x63, 0x17, 0x1e, 0xf9, 0xb7,
	0x4f, 0x84, 0x44, 0x7f, 0x00, 0xe0, 0x40, 0xd9, 0xe1, 0xcf, 0x1d, 0x03, 0x53, 0x33, 0xba, 0x21,
	0xfa, 0x1d, 0xcc, 0x4b, 0x1e, 0x85, 0x24, 0x49, 0xd9, 0xa5, 0xb9, 0xd8, 0xb5, 0x8c, 0x90, 0x91,
	0x95, 0x51, 0x3e, 0x0d, 0x85, 0x55, 0x6e, 0x94, 0xe7, 0x21, 0x2b, 0x42, 0x37, 0x14, 0x68, 0x17,
	0xbe, 0xa0, 0x2c, 0x88, 0xfa, 0x21, 0xf1, 0x47, 0x79, 0xac, 0xa8, 0x3c, 0xae, 0xea, 0xfd, 0x83,
	0x3c, 0x96, 0x2d, 0xa8, 0x66, 0x57, 0x43, 0x85, 0x69, 0xb9, 0xb3, 0x3e, 0xd5, 0xe4, 0x54, 0x95,
	0x3d, 0x0d, 0x73, 0xfe, 0x33, 0x00, 0xdd, 0xb7, 0x4a, 0xc4, 0x9c, 0x09, 0x82, 0x7e, 0x81, 0xaa,
	0x6a, 0x2f, 0x2c, 0xe3, 0x81, 0xd8, 0x87, 0x63, 0x57, 0x44, 0x4f, 0xa3, 0xd1, 0xaf, 0xa3, 0xfe,
	0x99, 0x43, 0xf5, 0xa2, 0xfe, 0xba, 0xd1, 0x48, 0xc7, 0x1b, 0x03, 0xbe, 0x3a, 0x4a, 0x08, 0x96,
	0xe4, 0xc3, 0x19, 0xda, 0xd8, 0x84, 0xf2, 0x53, 0x4c, 0x70, 0xce, 0x60, 0x6d, 0xf2, 0x28, 0xda,
	0xd4, 0x89, 0x10, 0x18, 0x4f, 0x0b, 0x81, 0x32, 0xe8, 0x3c, 0x0e, 0x3f, 0x09, 0x83, 0xbe, 0x86,
	0xb5, 0xc9, 0xa3, 0x64, 0x06, 0x39, 0x77, 0x06, 0x58, 0x67, 0x44, 0x67, 0x31, 0xcf, 0xf4, 0xc7,
	0x7e, 0x7d, 0x9d, 0x6f, 0x60, 0x63, 0xc6, 0xa1, 0xb2, 0x23, 0x77, 0x5e, 0x54, 0x61, 0x45, 0x95,
	0xce, 0x48, 0x32, 0xa0, 0x01, 0x41, 0xff, 0x1b, 0x00, 0xe3, 0x0b, 0x89, 0xf6, 0x0a, 0x2d, 0x9d,
	0xfa, 0x83, 0xb3, 0x7f, 0x9c, 0x0b, 0xab, 0xbd, 0xfe, 0xfe, 0xf6, 0xee, 0xed, 0xb3, 0x52, 0xdd,
	0xb1, 0xd5, 0x6b, 0x73, 0xd0, 0x9e, 0x78, 0x7d, 0x8b, 0x56, 0x44, 0x85, 0xfc, 0xcd, 0xd8, 0x43,
	0xcf, 0x0d, 0x58, 0xb9, 0x1f, 0x66, 0xf4, 0x53, 0x61, 0x93, 0x19, 0xd7, 0xd7, 0xfe, 0x79, 0x4e,
	0xb4, 0x16, 0xf5, 0x83, 0x12, 0xb5, 0xed, 0x6c, 0xce, 0x16, 0x15, 0x28, 0x4e, 0x2e, 0xeb, 0x7e,
	0x84, 0x1e, 0x91, 0x35, 0xe3, 0xd2, 0x3c, 0x22, 0x6b, 0x66, 0x2e, 0xb5, 0x2c, 0xbb, 0x40, 0x56,
	0x5f, 0x71, 0x52, 0x59, 0x2f, 0x0d, 0xf8, 0x4c, 0x8f, 0x58, 0xeb, 0x6a, 0x17, 0x76, 0x2a, 0x0a,
	0xba, 0xdd, 0x79, 0x0a, 0x45, 0x2b, 0x6c, 0x2a, 0x85, 0x8e, 0xbd, 0x35, 0x5b, 0xa1, 0x7e, 0x6d,
	0xa4, 0x12, 0x5f, 0x19, 0xb0, 0x7a, 0xce, 0xf0, 0xfb, 0x10, 0xb9, 0xa7, 0x44, 0xee, 0xd8, 0xf5,
	0x02, 0x1b, 0xd9, 0x58, 0xe6, 0xe1, 0xc6, 0x3f, 0xeb, 0x05, 0xdf, 0x95, 0x17, 0x55, 0xf5, 0x5d,
	0xb7, 0xff, 0x2e, 0x00, 0x00, 0xff, 0xff, 0x06, 0xe3, 0x4b, 0xc9, 0x79, 0x0a, 0x00, 0x00,
}
