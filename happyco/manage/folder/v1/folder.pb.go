// Code generated by protoc-gen-go.
// source: happyco/manage/folder/v1/folder.proto
// DO NOT EDIT!

/*
Package v1 is a generated protocol buffer package.

It is generated from these files:
	happyco/manage/folder/v1/folder.proto

It has these top-level messages:
	Folder
	ListFoldersRequest
	ListFoldersResponse
	CreateFoldersRequest
	CreateFoldersResponse
	UpdateFoldersRequest
	UpdateFoldersResponse
	UpdateFolderStatusesRequest
	UpdateFolderStatusesResponse
*/
package v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import happyco_type_v1 "github.com/happy-co/happyapis-golang/happyco/type/v1"
import happyco_type_v11 "github.com/happy-co/happyapis-golang/happyco/type/v1"
import _ "github.com/happy-co/happyapis-golang/google.golang.org/genproto/googleapis/api/annotations"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Folder_Type int32

const (
	Folder_MULTI_FAMILY        Folder_Type = 0
	Folder_PROPERTY_MANAGEMENT Folder_Type = 1
)

var Folder_Type_name = map[int32]string{
	0: "MULTI_FAMILY",
	1: "PROPERTY_MANAGEMENT",
}
var Folder_Type_value = map[string]int32{
	"MULTI_FAMILY":        0,
	"PROPERTY_MANAGEMENT": 1,
}

func (x Folder_Type) String() string {
	return proto.EnumName(Folder_Type_name, int32(x))
}
func (Folder_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Folder struct {
	Id       *happyco_type_v1.IntegrationID `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Inactive bool                           `protobuf:"varint,4,opt,name=inactive" json:"inactive,omitempty"`
	Name     string                         `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Type     Folder_Type                    `protobuf:"varint,3,opt,name=type,enum=happyco.manage.folder.v1.Folder_Type" json:"type,omitempty"`
}

func (m *Folder) Reset()                    { *m = Folder{} }
func (m *Folder) String() string            { return proto.CompactTextString(m) }
func (*Folder) ProtoMessage()               {}
func (*Folder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Folder) GetId() *happyco_type_v1.IntegrationID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Folder) GetInactive() bool {
	if m != nil {
		return m.Inactive
	}
	return false
}

func (m *Folder) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Folder) GetType() Folder_Type {
	if m != nil {
		return m.Type
	}
	return Folder_MULTI_FAMILY
}

type ListFoldersRequest struct {
	AccountId       *happyco_type_v1.IntegrationID   `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	FolderIds       []*happyco_type_v1.IntegrationID `protobuf:"bytes,2,rep,name=folder_ids,json=folderIds" json:"folder_ids,omitempty"`
	IncludeInactive bool                             `protobuf:"varint,3,opt,name=include_inactive,json=includeInactive" json:"include_inactive,omitempty"`
	Paging          *happyco_type_v11.Paging         `protobuf:"bytes,4,opt,name=paging" json:"paging,omitempty"`
}

func (m *ListFoldersRequest) Reset()                    { *m = ListFoldersRequest{} }
func (m *ListFoldersRequest) String() string            { return proto.CompactTextString(m) }
func (*ListFoldersRequest) ProtoMessage()               {}
func (*ListFoldersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ListFoldersRequest) GetAccountId() *happyco_type_v1.IntegrationID {
	if m != nil {
		return m.AccountId
	}
	return nil
}

func (m *ListFoldersRequest) GetFolderIds() []*happyco_type_v1.IntegrationID {
	if m != nil {
		return m.FolderIds
	}
	return nil
}

func (m *ListFoldersRequest) GetIncludeInactive() bool {
	if m != nil {
		return m.IncludeInactive
	}
	return false
}

func (m *ListFoldersRequest) GetPaging() *happyco_type_v11.Paging {
	if m != nil {
		return m.Paging
	}
	return nil
}

type ListFoldersResponse struct {
	Folders []*Folder                        `protobuf:"bytes,1,rep,name=folders" json:"folders,omitempty"`
	Paging  *happyco_type_v11.PagingResponse `protobuf:"bytes,2,opt,name=paging" json:"paging,omitempty"`
}

func (m *ListFoldersResponse) Reset()                    { *m = ListFoldersResponse{} }
func (m *ListFoldersResponse) String() string            { return proto.CompactTextString(m) }
func (*ListFoldersResponse) ProtoMessage()               {}
func (*ListFoldersResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ListFoldersResponse) GetFolders() []*Folder {
	if m != nil {
		return m.Folders
	}
	return nil
}

func (m *ListFoldersResponse) GetPaging() *happyco_type_v11.PagingResponse {
	if m != nil {
		return m.Paging
	}
	return nil
}

type CreateFoldersRequest struct {
	AccountId *happyco_type_v1.IntegrationID `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Folders   []*Folder                      `protobuf:"bytes,2,rep,name=folders" json:"folders,omitempty"`
}

func (m *CreateFoldersRequest) Reset()                    { *m = CreateFoldersRequest{} }
func (m *CreateFoldersRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateFoldersRequest) ProtoMessage()               {}
func (*CreateFoldersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CreateFoldersRequest) GetAccountId() *happyco_type_v1.IntegrationID {
	if m != nil {
		return m.AccountId
	}
	return nil
}

func (m *CreateFoldersRequest) GetFolders() []*Folder {
	if m != nil {
		return m.Folders
	}
	return nil
}

type CreateFoldersResponse struct {
	FolderIds []*happyco_type_v1.IntegrationID `protobuf:"bytes,1,rep,name=folder_ids,json=folderIds" json:"folder_ids,omitempty"`
}

func (m *CreateFoldersResponse) Reset()                    { *m = CreateFoldersResponse{} }
func (m *CreateFoldersResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateFoldersResponse) ProtoMessage()               {}
func (*CreateFoldersResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CreateFoldersResponse) GetFolderIds() []*happyco_type_v1.IntegrationID {
	if m != nil {
		return m.FolderIds
	}
	return nil
}

type UpdateFoldersRequest struct {
	AccountId *happyco_type_v1.IntegrationID `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Folders   []*Folder                      `protobuf:"bytes,2,rep,name=folders" json:"folders,omitempty"`
}

func (m *UpdateFoldersRequest) Reset()                    { *m = UpdateFoldersRequest{} }
func (m *UpdateFoldersRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateFoldersRequest) ProtoMessage()               {}
func (*UpdateFoldersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *UpdateFoldersRequest) GetAccountId() *happyco_type_v1.IntegrationID {
	if m != nil {
		return m.AccountId
	}
	return nil
}

func (m *UpdateFoldersRequest) GetFolders() []*Folder {
	if m != nil {
		return m.Folders
	}
	return nil
}

type UpdateFoldersResponse struct {
	Ids []*happyco_type_v1.IntegrationID `protobuf:"bytes,1,rep,name=ids" json:"ids,omitempty"`
}

func (m *UpdateFoldersResponse) Reset()                    { *m = UpdateFoldersResponse{} }
func (m *UpdateFoldersResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateFoldersResponse) ProtoMessage()               {}
func (*UpdateFoldersResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *UpdateFoldersResponse) GetIds() []*happyco_type_v1.IntegrationID {
	if m != nil {
		return m.Ids
	}
	return nil
}

type UpdateFolderStatusesRequest struct {
	AccountId *happyco_type_v1.IntegrationID   `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	FolderIds []*happyco_type_v1.IntegrationID `protobuf:"bytes,2,rep,name=folder_ids,json=folderIds" json:"folder_ids,omitempty"`
	Inactive  bool                             `protobuf:"varint,3,opt,name=inactive" json:"inactive,omitempty"`
}

func (m *UpdateFolderStatusesRequest) Reset()                    { *m = UpdateFolderStatusesRequest{} }
func (m *UpdateFolderStatusesRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateFolderStatusesRequest) ProtoMessage()               {}
func (*UpdateFolderStatusesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *UpdateFolderStatusesRequest) GetAccountId() *happyco_type_v1.IntegrationID {
	if m != nil {
		return m.AccountId
	}
	return nil
}

func (m *UpdateFolderStatusesRequest) GetFolderIds() []*happyco_type_v1.IntegrationID {
	if m != nil {
		return m.FolderIds
	}
	return nil
}

func (m *UpdateFolderStatusesRequest) GetInactive() bool {
	if m != nil {
		return m.Inactive
	}
	return false
}

type UpdateFolderStatusesResponse struct {
}

func (m *UpdateFolderStatusesResponse) Reset()                    { *m = UpdateFolderStatusesResponse{} }
func (m *UpdateFolderStatusesResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateFolderStatusesResponse) ProtoMessage()               {}
func (*UpdateFolderStatusesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func init() {
	proto.RegisterType((*Folder)(nil), "happyco.manage.folder.v1.Folder")
	proto.RegisterType((*ListFoldersRequest)(nil), "happyco.manage.folder.v1.ListFoldersRequest")
	proto.RegisterType((*ListFoldersResponse)(nil), "happyco.manage.folder.v1.ListFoldersResponse")
	proto.RegisterType((*CreateFoldersRequest)(nil), "happyco.manage.folder.v1.CreateFoldersRequest")
	proto.RegisterType((*CreateFoldersResponse)(nil), "happyco.manage.folder.v1.CreateFoldersResponse")
	proto.RegisterType((*UpdateFoldersRequest)(nil), "happyco.manage.folder.v1.UpdateFoldersRequest")
	proto.RegisterType((*UpdateFoldersResponse)(nil), "happyco.manage.folder.v1.UpdateFoldersResponse")
	proto.RegisterType((*UpdateFolderStatusesRequest)(nil), "happyco.manage.folder.v1.UpdateFolderStatusesRequest")
	proto.RegisterType((*UpdateFolderStatusesResponse)(nil), "happyco.manage.folder.v1.UpdateFolderStatusesResponse")
	proto.RegisterEnum("happyco.manage.folder.v1.Folder_Type", Folder_Type_name, Folder_Type_value)
}

func init() { proto.RegisterFile("happyco/manage/folder/v1/folder.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 660 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xcc, 0x96, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x86, 0x59, 0x27, 0x94, 0x76, 0x4a, 0x21, 0xda, 0x52, 0xd5, 0x72, 0x4b, 0xb1, 0x2c, 0x8a,
	0x42, 0x05, 0x76, 0x13, 0x04, 0x88, 0x4a, 0x1c, 0x0a, 0xb4, 0xc8, 0x52, 0x53, 0x2a, 0x93, 0x22,
	0x95, 0x4b, 0xb4, 0xd8, 0x4b, 0x58, 0x29, 0xb5, 0x4d, 0x76, 0x13, 0xa9, 0x57, 0x8e, 0xdc, 0x80,
	0x0b, 0xe2, 0x45, 0xfa, 0x20, 0x48, 0x3c, 0x01, 0x67, 0x9e, 0x01, 0x79, 0xbd, 0x4e, 0x93, 0x34,
	0x2e, 0xae, 0xc4, 0xa1, 0x37, 0x3b, 0x33, 0xff, 0xcc, 0x37, 0xb3, 0x33, 0xeb, 0xc0, 0xea, 0x07,
	0x12, 0xc7, 0x47, 0x7e, 0xe4, 0x1c, 0x92, 0x90, 0xb4, 0xa9, 0xf3, 0x3e, 0xea, 0x04, 0xb4, 0xeb,
	0xf4, 0x6b, 0xea, 0xc9, 0x8e, 0xbb, 0x91, 0x88, 0xb0, 0xae, 0xdc, 0xec, 0xd4, 0xcd, 0x56, 0xc6,
	0x7e, 0xcd, 0xb8, 0x9d, 0x05, 0x10, 0x47, 0x31, 0x4d, 0x74, 0x2c, 0x14, 0xb4, 0xdd, 0x25, 0x82,
	0x45, 0x61, 0x8b, 0x05, 0xa9, 0xde, 0x58, 0x1e, 0xf7, 0x8a, 0x49, 0x9b, 0x85, 0xed, 0xcc, 0xda,
	0x8e, 0xa2, 0x76, 0x87, 0x3a, 0x24, 0x66, 0x0e, 0x09, 0xc3, 0x48, 0x48, 0x35, 0x4f, 0xad, 0xd6,
	0x2f, 0x04, 0x53, 0xdb, 0x32, 0x1f, 0xb6, 0x41, 0x63, 0x81, 0x8e, 0x4c, 0x54, 0x9d, 0xad, 0xaf,
	0xd8, 0x19, 0x53, 0x12, 0xd3, 0xee, 0xd7, 0x6c, 0xf7, 0x24, 0xb3, 0xfb, 0xc2, 0xd3, 0x58, 0x80,
	0x0d, 0x98, 0x66, 0x21, 0xf1, 0x05, 0xeb, 0x53, 0xbd, 0x6c, 0xa2, 0xea, 0xb4, 0x37, 0x78, 0xc7,
	0x18, 0xca, 0x21, 0x39, 0xa4, 0xba, 0x66, 0xa2, 0xea, 0x8c, 0x27, 0x9f, 0xf1, 0x13, 0x28, 0x27,
	0xc1, 0xf4, 0x92, 0x89, 0xaa, 0xd7, 0xea, 0xab, 0x76, 0x5e, 0xd5, 0x76, 0xca, 0x63, 0x37, 0x8f,
	0x62, 0xea, 0x49, 0x89, 0x55, 0x83, 0x72, 0xf2, 0x86, 0x2b, 0x70, 0xb5, 0xb1, 0xbf, 0xd3, 0x74,
	0x5b, 0xdb, 0x9b, 0x0d, 0x77, 0xe7, 0xa0, 0x72, 0x09, 0x2f, 0xc2, 0xfc, 0x9e, 0xf7, 0x6a, 0x6f,
	0xcb, 0x6b, 0x1e, 0xb4, 0x1a, 0x9b, 0xbb, 0x9b, 0x2f, 0xb7, 0x1a, 0x5b, 0xbb, 0xcd, 0x0a, 0xb2,
	0xfe, 0x20, 0xc0, 0x3b, 0x8c, 0x8b, 0x34, 0x18, 0xf7, 0xe8, 0xc7, 0x1e, 0xe5, 0x02, 0x3f, 0x05,
	0x20, 0xbe, 0x1f, 0xf5, 0x42, 0xd1, 0x2a, 0x5c, 0xec, 0x8c, 0x52, 0xb8, 0x41, 0x22, 0x4f, 0x39,
	0x5b, 0x2c, 0xe0, 0xba, 0x66, 0x96, 0x8a, 0xc8, 0x53, 0x85, 0x1b, 0x70, 0x7c, 0x17, 0x2a, 0x2c,
	0xf4, 0x3b, 0xbd, 0x80, 0xb6, 0x06, 0xad, 0x2b, 0xc9, 0xd6, 0x5d, 0x57, 0xbf, 0xbb, 0x59, 0x07,
	0x1d, 0x98, 0x4a, 0x8f, 0x51, 0xf6, 0x76, 0xb6, 0xbe, 0x78, 0x2a, 0xcb, 0x9e, 0x34, 0x7b, 0xca,
	0xcd, 0xfa, 0x8c, 0x60, 0x7e, 0xa4, 0x60, 0x1e, 0x47, 0x21, 0xa7, 0x78, 0x03, 0xae, 0xa4, 0x00,
	0x5c, 0x47, 0x92, 0xd7, 0xfc, 0x57, 0xe7, 0xbd, 0x4c, 0x80, 0x1f, 0x0f, 0x20, 0x34, 0x09, 0x71,
	0x2b, 0x0f, 0x42, 0x25, 0x1b, 0xc0, 0x7c, 0x41, 0x70, 0xe3, 0x79, 0x97, 0x12, 0x41, 0xff, 0x6f,
	0xff, 0x87, 0x8a, 0xd1, 0xce, 0x59, 0x8c, 0xf5, 0x06, 0x16, 0xc6, 0x90, 0x54, 0x87, 0x46, 0x0f,
	0x15, 0x9d, 0xf3, 0x50, 0x65, 0xad, 0xfb, 0x71, 0x70, 0xa1, 0x6a, 0x75, 0x61, 0x61, 0x0c, 0x49,
	0xd5, 0xba, 0x0e, 0xa5, 0xe2, 0x45, 0x26, 0xae, 0xd6, 0x31, 0x82, 0xa5, 0xe1, 0x58, 0xaf, 0x05,
	0x11, 0x3d, 0x4e, 0x2f, 0xc8, 0x46, 0x0d, 0x5f, 0x42, 0xa5, 0xd1, 0x4b, 0xc8, 0x5a, 0x81, 0xe5,
	0xc9, 0xe0, 0x69, 0x2f, 0xea, 0xdf, 0x2f, 0xc3, 0x9c, 0x32, 0xd1, 0x6e, 0x9f, 0xf9, 0x14, 0x7f,
	0x45, 0x30, 0x3b, 0xb4, 0x43, 0xf8, 0x5e, 0x7e, 0xc7, 0x4f, 0xdf, 0x2d, 0xc6, 0xfd, 0x82, 0xde,
	0x69, 0x7a, 0xeb, 0xce, 0xa7, 0x9f, 0xbf, 0xbf, 0x69, 0xa6, 0xb5, 0x24, 0xaf, 0xe6, 0x7e, 0x6d,
	0xf4, 0x2b, 0xc1, 0x9d, 0x0e, 0xe3, 0x62, 0x03, 0xad, 0xe1, 0x1f, 0x08, 0xe6, 0x46, 0x06, 0x17,
	0xdb, 0xf9, 0x89, 0x26, 0x2d, 0x9d, 0xe1, 0x14, 0xf6, 0x57, 0x68, 0x55, 0x89, 0x66, 0x59, 0x37,
	0x73, 0xd0, 0x7c, 0xa9, 0xca, 0xe0, 0x46, 0x26, 0xed, 0x2c, 0xb8, 0x49, 0x5b, 0x72, 0x16, 0xdc,
	0xc4, 0x11, 0xce, 0xe0, 0x8c, 0x3c, 0xb8, 0x9e, 0x54, 0x25, 0x70, 0xc7, 0x63, 0x9b, 0x99, 0x4d,
	0x00, 0x7e, 0x58, 0x2c, 0xe7, 0xd8, 0xa8, 0x1b, 0x8f, 0xce, 0x2b, 0x53, 0xc4, 0xeb, 0x92, 0x78,
	0xcd, 0x58, 0x9d, 0x48, 0xec, 0x70, 0xe5, 0x7f, 0x42, 0xfe, 0xcc, 0x78, 0xab, 0xe7, 0xfd, 0x77,
	0x78, 0x37, 0x25, 0xbf, 0xdc, 0x0f, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0x7d, 0x80, 0x95, 0x42,
	0x5e, 0x08, 0x00, 0x00,
}
