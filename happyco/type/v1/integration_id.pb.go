// Code generated by protoc-gen-go.
// source: happyco/type/v1/integration_id.proto
// DO NOT EDIT!

package v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// * IntegrationID represents an object on HappyCo's platform. Use of the
// external_id is encouraged as no guarantees are made about id over the life
// of the platform.
type IntegrationID struct {
	Id         string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	ExternalId string `protobuf:"bytes,2,opt,name=external_id,json=externalId" json:"external_id,omitempty"`
	SyncToken  int32  `protobuf:"varint,3,opt,name=sync_token,json=syncToken" json:"sync_token,omitempty"`
}

func (m *IntegrationID) Reset()                    { *m = IntegrationID{} }
func (m *IntegrationID) String() string            { return proto.CompactTextString(m) }
func (*IntegrationID) ProtoMessage()               {}
func (*IntegrationID) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *IntegrationID) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *IntegrationID) GetExternalId() string {
	if m != nil {
		return m.ExternalId
	}
	return ""
}

func (m *IntegrationID) GetSyncToken() int32 {
	if m != nil {
		return m.SyncToken
	}
	return 0
}

func init() {
	proto.RegisterType((*IntegrationID)(nil), "happyco.type.v1.IntegrationID")
}

func init() { proto.RegisterFile("happyco/type/v1/integration_id.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 159 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x52, 0xc9, 0x48, 0x2c, 0x28,
	0xa8, 0x4c, 0xce, 0xd7, 0x2f, 0xa9, 0x2c, 0x48, 0xd5, 0x2f, 0x33, 0xd4, 0xcf, 0xcc, 0x2b, 0x49,
	0x4d, 0x2f, 0x4a, 0x2c, 0xc9, 0xcc, 0xcf, 0x8b, 0xcf, 0x4c, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9,
	0x17, 0xe2, 0x87, 0xaa, 0xd2, 0x03, 0xa9, 0xd2, 0x2b, 0x33, 0x54, 0x8a, 0xe7, 0xe2, 0xf5, 0x44,
	0x28, 0xf4, 0x74, 0x11, 0xe2, 0xe3, 0x62, 0xca, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c,
	0x62, 0xca, 0x4c, 0x11, 0x92, 0xe7, 0xe2, 0x4e, 0xad, 0x28, 0x49, 0x2d, 0xca, 0x4b, 0xcc, 0x89,
	0xcf, 0x4c, 0x91, 0x60, 0x02, 0x4b, 0x70, 0xc1, 0x84, 0x3c, 0x53, 0x84, 0x64, 0xb9, 0xb8, 0x8a,
	0x2b, 0xf3, 0x92, 0xe3, 0x4b, 0xf2, 0xb3, 0x53, 0xf3, 0x24, 0x98, 0x15, 0x18, 0x35, 0x58, 0x83,
	0x38, 0x41, 0x22, 0x21, 0x20, 0x01, 0x27, 0xc1, 0x28, 0x7e, 0x34, 0x97, 0x25, 0xb1, 0x81, 0xdd,
	0x62, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xd1, 0x2c, 0xda, 0xb0, 0xb3, 0x00, 0x00, 0x00,
}
